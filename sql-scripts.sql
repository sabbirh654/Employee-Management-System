CREATE DATABASE EMS;

--Designation Table
CREATE TABLE Designation(
	Id INT PRIMARY KEY IDENTITY(1,1),
	Name NVARCHAR(100) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	UpdatedAt DATETIME DEFAULT GETDATE()
);

-- Department Table
CREATE TABLE Department(
	Id INT PRIMARY KEY IDENTITY(1,1),
	Name NVARCHAR(100) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	UpdatedAt DATETIME DEFAULT GETDATE()

);

--Employee Table
CREATE TABLE Employee(
	Id INT PRIMARY KEY IDENTITY(1,1),
	Name NVARCHAR(100) NOT NULL,
	Email NVARCHAR(100) NOT NULL,
	Phone NVARCHAR(15),
	Address NVARCHAR(255),
	DOB DATE,
	DesignationId INT NOT NULL,
	DepartmentId INT NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	UpdatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT FK_Employee_Designation FOREIGN KEY(DesignationId) REFERENCES Designation(Id),
	CONSTRAINT FK_Employee_Department FOREIGN KEY(DepartmentId) REFERENCES Department(Id),
);

CREATE PROCEDURE AddNewDepartment
	@Name NVARCHAR(100)

AS
BEGIN
    INSERT INTO Department(Name)
	VALUES(@Name);
END;

CREATE PROCEDURE GetAllDepartments
AS
BEGIN
	SELECT Id, Name FROM Department;
END;

CREATE PROCEDURE GetDepartmentById
	@Id INT
AS
BEGIN
	SELECT Id, Name FROM Department
	WHERE Id = @Id;
END;

CREATE PROCEDURE UpdateDepartment
	@Id INT,
	@Name NVARCHAR(100)
AS
BEGIN
	UPDATE Department
	SET Name = @Name
	WHERE Id = @Id;
END;

CREATE PROCEDURE DeleteDepartment
	@Id INT
AS
BEGIN
	UPDATE Department
	SET IsDeleted = 1
	WHERE Id = @Id;
END;
